{"remainingRequest":"/Users/user/Workspace/registration-annotation/node_modules/babel-loader/lib/index.js!/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Workspace/registration-annotation/src/components/annotation/Image.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Workspace/registration-annotation/src/components/annotation/Image.vue","mtime":1571130186748},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/user/Workspace/registration-annotation/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Quad from \"./Quad\";\nimport Word from \"./Word\";\nimport AnnotationHistory from \"./History\";\nimport * as imageProcessing from \"./main_methods/image_processing\";\nimport * as mouseEvent from \"./main_methods/mouse_event\";\nimport * as others from \"./main_methods/others\";\nimport * as keyDownEvent from \"./main_methods/key_down_event\";\nimport { isEmpty } from \"@/lib/utils\";\nexport default {\n  components: {\n    Quad: Quad,\n    Word: Word,\n    AnnotationHistory: AnnotationHistory\n  },\n  computed: {\n    card: function card() {\n      return this.$store.state.annotation.card;\n    },\n    isAnnotated: function isAnnotated() {\n      return this.card.annotations.length > 0;\n    },\n    visible: function visible() {\n      return !isEmpty(this.card);\n    },\n    isDraw: function isDraw() {\n      return this.$store.getters['annotation/isDraw'];\n    },\n    words: function words() {\n      return this.$store.state.annotation.words;\n    },\n    boxingMode: function boxingMode() {\n      return this.$store.state.annotation.boxingMode;\n    },\n    viewBox: function viewBox() {\n      return '0 0 ' + this.width + ' ' + this.height;\n    },\n    isDrawing: function isDrawing() {\n      return this.quad.length > 0;\n    },\n    drawQuad: function drawQuad() {\n      var quad = [];\n      var p = this.currentPoint;\n\n      if (this.quad.length === 1) {\n        quad.push(this.quad[0]);\n        quad.push({\n          x: p.x,\n          y: this.quad[0].y\n        });\n        quad.push(p);\n        quad.push({\n          x: this.quad[0].x,\n          y: p.y\n        });\n      }\n\n      return quad;\n    },\n    isLetterMode: function isLetterMode() {\n      return this.boxingMode === 'letters';\n    }\n  },\n  data: function data() {\n    return {\n      width: 100,\n      height: 60,\n      quad: [],\n      currentPoint: {},\n      imageContext: null,\n      imageUrl: '',\n      imageDataUrl: '',\n      imageLoading: true\n    };\n  },\n  watch: {\n    card: {\n      handler: function handler() {\n        this.updateImageSize();\n      }\n    }\n  },\n  methods: _objectSpread({}, imageProcessing, {}, mouseEvent, {}, keyDownEvent, {}, others, {\n    toggleBoxingMode: function toggleBoxingMode() {\n      if (this.isLetterMode) {\n        this.$store.dispatch('annotation/setBoxingMode', 'words');\n      } else {\n        this.$store.dispatch('annotation/setBoxingMode', 'letters');\n      }\n    }\n  }),\n  mounted: function mounted() {\n    this.updateImageSize();\n    window.addEventListener('keydown', this.onKeyDown);\n  },\n  destroyed: function destroyed() {\n    window.removeEventListener('keydown', this.onKeyDown);\n  }\n};",{"version":3,"sources":["Image.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class='svg_body' v-if=\"visible\">\n      <svg ref=\"svg\"\n           :viewBox=\"viewBox\"\n           width=\"100%\"\n           @mousedown=\"mouseDownEvent\"\n           @mousemove=\"mouseMoveEvent\">\n        <image :xlink:href=\"imageDataUrl\" height=\"100%\" width=\"100%\"/>\n\n        <word v-for=\"word in words\" :key=\"word.id\" :word=\"word\" />\n        <quad :quad=\"drawQuad\"/>\n      </svg>\n    </div>\n</template>\n\n<script>\nimport Quad from './Quad'\nimport Word from './Word'\nimport AnnotationHistory from './History'\n\nimport * as imageProcessing from './main_methods/image_processing'\nimport * as mouseEvent from './main_methods/mouse_event'\nimport * as others from './main_methods/others'\nimport * as keyDownEvent from './main_methods/key_down_event'\n\nimport { isEmpty } from \"@/lib/utils\"\n\nexport default {\n  components: { Quad, Word, AnnotationHistory },\n  computed: {\n    card: function () { return this.$store.state.annotation.card },\n    isAnnotated: function () { return this.card.annotations.length > 0 },\n    visible: function () { return !isEmpty(this.card) },\n    isDraw: function () { return this.$store.getters['annotation/isDraw'] },\n    words: function () { return this.$store.state.annotation.words },\n    boxingMode: function () { return this.$store.state.annotation.boxingMode },\n    viewBox: function () { return '0 0 ' + this.width + ' ' + this.height },\n    isDrawing: function () { return this.quad.length > 0 },\n    drawQuad: function () {\n      let quad = []\n      let p = this.currentPoint\n\n      if (this.quad.length === 1) {\n        quad.push(this.quad[0])\n        quad.push({ x: p.x, y: this.quad[0].y })\n        quad.push(p)\n        quad.push({ x: this.quad[0].x, y: p.y })\n      }\n      return quad\n    },\n    isLetterMode: function () {\n      return this.boxingMode === 'letters'\n    }\n  },\n  data () {\n    return {\n      width: 100,\n      height: 60,\n      quad: [],\n      currentPoint: {},\n      imageContext: null,\n      imageUrl: '',\n      imageDataUrl: '',\n      imageLoading: true,\n    }\n  },\n  watch: {\n    card: {\n      handler () {\n        this.updateImageSize()\n      }\n    }\n  },\n  methods: {\n    ...imageProcessing,\n    ...mouseEvent,\n    ...keyDownEvent,\n    ...others,\n    toggleBoxingMode: function () {\n      if (this.isLetterMode) {\n        this.$store.dispatch('annotation/setBoxingMode', 'words')\n      } else {\n        this.$store.dispatch('annotation/setBoxingMode', 'letters')\n      }\n    },\n  },\n  mounted () {\n    this.updateImageSize()\n    window.addEventListener('keydown', this.onKeyDown)\n  },\n  destroyed () {\n    window.removeEventListener('keydown', this.onKeyDown)\n  }\n}\n</script>\n\n<style>\n  .svg_body {\n    height: 100%;\n    overflow: auto;\n  }\n</style>\n"],"sourceRoot":"src/components/annotation"}]}