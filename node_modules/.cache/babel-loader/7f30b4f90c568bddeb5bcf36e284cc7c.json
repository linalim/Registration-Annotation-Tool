{"remainingRequest":"/Users/user/Workspace/registration-annotation/node_modules/babel-loader/lib/index.js!/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Workspace/registration-annotation/src/components/annotation/image/Word.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Workspace/registration-annotation/src/components/annotation/image/Word.vue","mtime":1571130402049},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nimport Quad from \"./Quad\";\nimport { colorOf } from \"@/constants/color\";\nexport default {\n  props: ['word'],\n  components: {\n    Quad: Quad\n  },\n  computed: {\n    line: function line() {\n      return this.$store.getters['annotation/line'](this.word);\n    },\n    field: function field() {\n      return this.$store.getters['annotation/field'](this.line);\n    },\n    hoverField: function hoverField() {\n      return this.$store.state.annotation.hoverField === this.field;\n    },\n    selectField: function selectField() {\n      return this.$store.state.annotation.selectField === this.field;\n    },\n    hoverLine: function hoverLine() {\n      return this.$store.state.annotation.hoverLine === this.line;\n    },\n    selectLine: function selectLine() {\n      return this.$store.state.annotation.selectLine === this.line;\n    },\n    hoverWord: function hoverWord() {\n      return this.$store.state.annotation.hoverWord === this.word;\n    },\n    selectWord: function selectWord() {\n      return this.$store.state.annotation.selectWord === this.word;\n    },\n    quadStyle: quadStyle\n  },\n  methods: {\n    mouseOverEvent: mouseOverEvent,\n    mouseLeaveEvent: mouseLeaveEvent\n  }\n};\n\nfunction quadStyle() {\n  var opacity = 0.3;\n  var lineOpacity = 0.95;\n  var width = 1;\n  var color = colorOf(this.field.labels[0], 1.0);\n\n  if (this.hoverWord) {\n    opacity = 0.3;\n    width = 10;\n    lineOpacity = 0.5;\n  } else if (this.hoverLine) {\n    opacity = 0.3;\n    width = 5;\n    lineOpacity = 0.5;\n  } else if (this.hoverField) {\n    opacity = 0.3;\n    width = 5;\n    lineOpacity = 0.5;\n  }\n\n  if (this.selectWord) {\n    opacity = 0.0;\n    width = 5;\n  } else if (this.selectLine) {\n    opacity = 0.15;\n  } else if (this.selectField) {\n    opacity = 0.15;\n  }\n\n  return \"fill:\".concat(color, \";stroke:\").concat(color, \";stroke-width:\").concat(width, \";stroke-opacity:\").concat(lineOpacity, \";fill-opacity:\").concat(opacity);\n}\n\nfunction mouseOverEvent() {\n  this.$store.commit('annotation/setHoverWord', this.word);\n}\n\nfunction mouseLeaveEvent() {\n  this.$store.commit('annotation/setHoverWord', {});\n}",{"version":3,"sources":["Word.vue"],"names":[],"mappings":";;;;;;;;AASA,OAAA,IAAA;AACA,SAAA,OAAA,QAAA,mBAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,IAAA,EAAA;AAAA,GAFA;AAGA,EAAA,QAAA,EAAA;AACA,IAAA,IAAA,EAAA,gBAAA;AAAA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,iBAAA,EAAA,KAAA,IAAA,CAAA;AAAA,KADA;AAEA,IAAA,KAAA,EAAA,iBAAA;AAAA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,kBAAA,EAAA,KAAA,IAAA,CAAA;AAAA,KAFA;AAGA,IAAA,UAAA,EAAA,sBAAA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,UAAA,KAAA,KAAA,KAAA;AAAA,KAHA;AAIA,IAAA,WAAA,EAAA,uBAAA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,WAAA,KAAA,KAAA,KAAA;AAAA,KAJA;AAKA,IAAA,SAAA,EAAA,qBAAA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,SAAA,KAAA,KAAA,IAAA;AAAA,KALA;AAMA,IAAA,UAAA,EAAA,sBAAA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,UAAA,KAAA,KAAA,IAAA;AAAA,KANA;AAOA,IAAA,SAAA,EAAA,qBAAA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,SAAA,KAAA,KAAA,IAAA;AAAA,KAPA;AAQA,IAAA,UAAA,EAAA,sBAAA;AAAA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,UAAA,KAAA,KAAA,IAAA;AAAA,KARA;AASA,IAAA,SAAA,EAAA;AATA,GAHA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,cAAA,EAAA,cADA;AAEA,IAAA,eAAA,EAAA;AAFA;AAdA,CAAA;;AAoBA,SAAA,SAAA,GAAA;AACA,MAAA,OAAA,GAAA,GAAA;AACA,MAAA,WAAA,GAAA,IAAA;AACA,MAAA,KAAA,GAAA,CAAA;AACA,MAAA,KAAA,GAAA,OAAA,CAAA,KAAA,KAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,GAAA,CAAA;;AAEA,MAAA,KAAA,SAAA,EAAA;AACA,IAAA,OAAA,GAAA,GAAA;AACA,IAAA,KAAA,GAAA,EAAA;AACA,IAAA,WAAA,GAAA,GAAA;AACA,GAJA,MAIA,IAAA,KAAA,SAAA,EAAA;AACA,IAAA,OAAA,GAAA,GAAA;AACA,IAAA,KAAA,GAAA,CAAA;AACA,IAAA,WAAA,GAAA,GAAA;AACA,GAJA,MAIA,IAAA,KAAA,UAAA,EAAA;AACA,IAAA,OAAA,GAAA,GAAA;AACA,IAAA,KAAA,GAAA,CAAA;AACA,IAAA,WAAA,GAAA,GAAA;AACA;;AAEA,MAAA,KAAA,UAAA,EAAA;AACA,IAAA,OAAA,GAAA,GAAA;AACA,IAAA,KAAA,GAAA,CAAA;AACA,GAHA,MAGA,IAAA,KAAA,UAAA,EAAA;AACA,IAAA,OAAA,GAAA,IAAA;AACA,GAFA,MAEA,IAAA,KAAA,WAAA,EAAA;AACA,IAAA,OAAA,GAAA,IAAA;AACA;;AACA,wBAAA,KAAA,qBAAA,KAAA,2BAAA,KAAA,6BAAA,WAAA,2BAAA,OAAA;AACA;;AAEA,SAAA,cAAA,GAAA;AACA,OAAA,MAAA,CAAA,MAAA,CAAA,yBAAA,EAAA,KAAA,IAAA;AACA;;AAEA,SAAA,eAAA,GAAA;AACA,OAAA,MAAA,CAAA,MAAA,CAAA,yBAAA,EAAA,EAAA;AACA","sourcesContent":["<template>\n  <quad :quad=\"word.quad\"\n        :quad-style=\"quadStyle\"\n        :blink=\"selectWord\"\n        @mouseover=\"mouseOverEvent\"\n        @mouseleave=\"mouseLeaveEvent\" />\n</template>\n\n<script>\nimport Quad from './Quad'\nimport { colorOf } from \"@/constants/color\"\n\nexport default {\n  props: ['word'],\n  components: { Quad },\n  computed: {\n    line: function () { return this.$store.getters['annotation/line'](this.word) },\n    field: function () { return this.$store.getters['annotation/field'](this.line) },\n    hoverField: function () { return this.$store.state.annotation.hoverField === this.field },\n    selectField: function () { return this.$store.state.annotation.selectField === this.field },\n    hoverLine: function () { return this.$store.state.annotation.hoverLine === this.line },\n    selectLine: function () { return this.$store.state.annotation.selectLine === this.line },\n    hoverWord: function () { return this.$store.state.annotation.hoverWord === this.word },\n    selectWord: function () { return this.$store.state.annotation.selectWord === this.word },\n    quadStyle\n  },\n  methods: {\n    mouseOverEvent,\n    mouseLeaveEvent\n  }\n}\n\nfunction quadStyle () {\n  let opacity = 0.3\n  let lineOpacity = 0.95\n  let width = 1\n  let color = colorOf(this.field.labels[0], 1.0)\n\n  if (this.hoverWord) {\n    opacity = 0.3\n    width = 10\n    lineOpacity = 0.5\n  } else if (this.hoverLine) {\n    opacity = 0.3\n    width = 5\n    lineOpacity = 0.5\n  } else if (this.hoverField) {\n    opacity = 0.3\n    width = 5\n    lineOpacity = 0.5\n  }\n\n  if (this.selectWord) {\n    opacity = 0.0\n    width = 5\n  } else if (this.selectLine) {\n    opacity = 0.15\n  } else if (this.selectField) {\n    opacity = 0.15\n  }\n  return `fill:${color};stroke:${color};stroke-width:${width};stroke-opacity:${lineOpacity};fill-opacity:${opacity}`\n}\n\nfunction mouseOverEvent () {\n  this.$store.commit('annotation/setHoverWord', this.word)\n}\n\nfunction mouseLeaveEvent () {\n  this.$store.commit('annotation/setHoverWord', {})\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components/annotation/image"}]}