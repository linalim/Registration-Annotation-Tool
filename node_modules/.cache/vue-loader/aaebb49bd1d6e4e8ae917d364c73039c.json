{"remainingRequest":"/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Workspace/registration-annotation/src/components/annotation/image/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Workspace/registration-annotation/src/components/annotation/image/Main.vue","mtime":1571679507022},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  computed: {\n    viewBox: function () { return '0 0 ' + this.width + ' ' + this.height },\n   \n  },\n  data () {\n    return {\n      width: 100,\n      height: 60,\n      quad: [],\n      currentPoint: {},\n      imageContext: null,\n      // imageUrl:'/images/'\n      imageUrl: 'http://localhost:3000/images/?image=',\n    }\n  },\n  watch: {\n    card: {\n      handler () {\n      }\n    }\n  },\n  methods: {\n    toggleBoxingMode: function () {\n      if (this.isLetterMode) {\n        this.$store.dispatch('annotation/setBoxingMode', 'words')\n      } else {\n        this.$store.dispatch('annotation/setBoxingMode', 'letters')\n      }\n    },\n  },\n}\n",{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components/annotation/image","sourcesContent":["<template>\n    <div class='svg_body'>\n      <svg ref=\"svg\"\n           :viewBox=\"viewBox\"\n           width=\"100%\">\n\n        <image :xlink:href=\"imageUrl+this.$store.state.imageData[this.$store.state.index]\" \n                height=\"100%\" \n                width=\"100%\" \n                v-if=\"this.$store.state.imageData[this.$store.state.index]\"/>\n      </svg>\n    </div>\n</template>\n\n<script>\n\nexport default {\n  computed: {\n    viewBox: function () { return '0 0 ' + this.width + ' ' + this.height },\n   \n  },\n  data () {\n    return {\n      width: 100,\n      height: 60,\n      quad: [],\n      currentPoint: {},\n      imageContext: null,\n      // imageUrl:'/images/'\n      imageUrl: 'http://localhost:3000/images/?image=',\n    }\n  },\n  watch: {\n    card: {\n      handler () {\n      }\n    }\n  },\n  methods: {\n    toggleBoxingMode: function () {\n      if (this.isLetterMode) {\n        this.$store.dispatch('annotation/setBoxingMode', 'words')\n      } else {\n        this.$store.dispatch('annotation/setBoxingMode', 'letters')\n      }\n    },\n  },\n}\n</script>\n\n<style>\n  .svg_body {\n    height: 100%;\n    overflow: auto;\n  }\n</style>\n"]}]}