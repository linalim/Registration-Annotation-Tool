{"remainingRequest":"/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Workspace/registration-annotation/src/components/annotation/image/Quad.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Workspace/registration-annotation/src/components/annotation/image/Quad.vue","mtime":1571130398100},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['quad', 'quadStyle', 'blink'],\n  computed: {\n    drawable: function() {return this.quad.length === 4},\n    points: function () {\n      const q = this.quad\n      return `${q[0].x},${q[0].y} ${q[1].x},${q[1].y} ${q[2].x},${q[2].y} ${q[3].x},${q[3].y}`\n    },\n    defaultStyle: function () {\n      let defaultStyle = \"stroke:purple;stroke-width:1;stroke-opacity:0.99;fill-opacity:0.5;\"\n      if(this.$store.state.annotation.boxingMode === 'letters') {\n        return defaultStyle.concat(\"fill:lime;\")\n      } else {\n        return defaultStyle.concat(\"fill:blue;\")\n      }\n    }\n  },\n  data () {\n    return {\n      polygonId: Math.random().toString(36).substr(2, 11),\n      circleId: Math.random().toString(36).substr(2, 11)\n    }\n  }\n}\n\n",{"version":3,"sources":["Quad.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Quad.vue","sourceRoot":"src/components/annotation/image","sourcesContent":["<template>\n  <g v-if=\"drawable\">\n    <polygon :id=\"polygonId\"\n             :points=\"points\"\n             :style=\"quadStyle || defaultStyle\"\n             @mouseover=\"$emit('mouseover')\"\n             @mouseleave=\"$emit('mouseleave')\"/>\n    <circle :id=\"circleId\" :cx=\"quad[0].x\" :cy=\"quad[0].y\" r=\"7\" stroke=\"black\" stroke-width=\"2\" fill=\"red\"/>\n\n    <animate v-if=\"blink\"\n             :href=\"'#' + polygonId\"\n             attributeName=\"stroke-opacity\"\n             repeatCount=\"indefinite\"\n             begin=\"0s\"\n             dur=\"1000ms\"\n             values=\"0.05; 0.99; 0.05\"/>\n\n    <animate v-if=\"blink\"\n             :href=\"'#' + circleId\"\n             attributeName=\"stroke-opacity\"\n             repeatCount=\"indefinite\"\n             begin=\"0s\"\n             dur=\"1000ms\"\n             values=\"0.05; 0.99; 0.05\"/>\n\n    <animate v-if=\"blink\"\n             :href=\"'#' + circleId\"\n             attributeName=\"fill-opacity\"\n             repeatCount=\"indefinite\"\n             begin=\"0s\"\n             dur=\"1000ms\"\n             values=\"0.05; 0.99; 0.05\"/>\n  </g>\n</template>\n\n<script>\nexport default {\n  props: ['quad', 'quadStyle', 'blink'],\n  computed: {\n    drawable: function() {return this.quad.length === 4},\n    points: function () {\n      const q = this.quad\n      return `${q[0].x},${q[0].y} ${q[1].x},${q[1].y} ${q[2].x},${q[2].y} ${q[3].x},${q[3].y}`\n    },\n    defaultStyle: function () {\n      let defaultStyle = \"stroke:purple;stroke-width:1;stroke-opacity:0.99;fill-opacity:0.5;\"\n      if(this.$store.state.annotation.boxingMode === 'letters') {\n        return defaultStyle.concat(\"fill:lime;\")\n      } else {\n        return defaultStyle.concat(\"fill:blue;\")\n      }\n    }\n  },\n  data () {\n    return {\n      polygonId: Math.random().toString(36).substr(2, 11),\n      circleId: Math.random().toString(36).substr(2, 11)\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"]}]}