{"remainingRequest":"/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Workspace/registration-annotation/src/components/annotation/table/buttons/Next.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/user/Workspace/registration-annotation/src/components/annotation/table/buttons/Next.vue","mtime":1571371360301},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Workspace/registration-annotation/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n\tmethods: {\n\t\tgetImageandResults,\n\t},\n}\n\nfunction getImageandResults () {\n\tthis.$store.commit('getAllImages')\n\tthis.$store.commit('updateIndex')\n\tthis.$store.commit('getAllResults')\n\tthis.$store.commit('getTableKeys')\n\n}\n\n// function parsing_key() {\n//     let ocr_result = this.$store.state.imageResult[this.$store.state.index]\n//     let result_key = []\n//     for (var i = 0; i < ocr_result[\"ocr\"].length; i++) {\n//     \tresult_key.push(ocr_result[\"ocr\"][i][\"key\"])\n//     }\n//     console.log(\"parsing key: \" + result_key)\n//     return result_key\n//  }\n\n//  function parsing_word() {\n//     let ocr_result = this.$store.state.imageResult[this.$store.state.index]\n//     let result_word = []\n//     for (var i = 0; i < ocr_result[\"ocr\"].length; i++) {\n//     \tresult_word.push(ocr_result[\"ocr\"][i][\"key\"])\n//     }\n//     console.log(\"parsing word: \" + result_word)\n//     return result_word\n//  }\n\n// function table_keys() {\n//     let ocr_result = this.$store.state.imageResult[this.$store.state.index]\n//     let keys = []\n//     for (var i = 0; i < ocr_result[\"ocr\"].length; i++) {\n//     \tkeys.push({ name: parsing_key[i], value: parsing_word[i] })\n//     }\n//     console.log(\"table key print: \" + keys)\n//     return keys\n// }\n\n",{"version":3,"sources":["Next.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Next.vue","sourceRoot":"src/components/annotation/table/buttons","sourcesContent":["<template>\n  <div>\n  \t<v-btn depressed color=\"primary\" @click=\"getImageandResults\">Done & Next Image</v-btn>\n\n  </div>\n</template>\n\n<script>\n\nexport default {\n\tmethods: {\n\t\tgetImageandResults,\n\t},\n}\n\nfunction getImageandResults () {\n\tthis.$store.commit('getAllImages')\n\tthis.$store.commit('updateIndex')\n\tthis.$store.commit('getAllResults')\n\tthis.$store.commit('getTableKeys')\n\n}\n\n// function parsing_key() {\n//     let ocr_result = this.$store.state.imageResult[this.$store.state.index]\n//     let result_key = []\n//     for (var i = 0; i < ocr_result[\"ocr\"].length; i++) {\n//     \tresult_key.push(ocr_result[\"ocr\"][i][\"key\"])\n//     }\n//     console.log(\"parsing key: \" + result_key)\n//     return result_key\n//  }\n\n//  function parsing_word() {\n//     let ocr_result = this.$store.state.imageResult[this.$store.state.index]\n//     let result_word = []\n//     for (var i = 0; i < ocr_result[\"ocr\"].length; i++) {\n//     \tresult_word.push(ocr_result[\"ocr\"][i][\"key\"])\n//     }\n//     console.log(\"parsing word: \" + result_word)\n//     return result_word\n//  }\n\n// function table_keys() {\n//     let ocr_result = this.$store.state.imageResult[this.$store.state.index]\n//     let keys = []\n//     for (var i = 0; i < ocr_result[\"ocr\"].length; i++) {\n//     \tkeys.push({ name: parsing_key[i], value: parsing_word[i] })\n//     }\n//     console.log(\"table key print: \" + keys)\n//     return keys\n// }\n\n</script>"]}]}